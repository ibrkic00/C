#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<stdlib.h>
#include<malloc.h>
#include<math.h>
#include<time.h>
#include<string.h>

int jestParan(int);
int jestDjeljiv(int);
int analiza(int*, int, int (*)(int));

int main()
{
	int* niz = NULL;
	int brojElemenata, i, lokacija, brojacParnih = 0, brojacDjeljivih = 0;

	printf("Unesite broj elemenata niza: ");
	scanf("%d", &brojElemenata);

	niz = (int*)malloc(brojElemenata * sizeof(int));

	for (i = 0; i < brojElemenata; i++)
	{
		scanf("%d", &niz[i]);
	}
	printf("Ovo je vas niz: ");

	for (i = 0; i < brojElemenata; i++)
	{
		printf("%d  ", niz[i]);
	}

	brojacParnih = analiza(niz, brojElemenata, jestParan);
	brojacDjeljivih = analiza(niz, brojElemenata, jestDjeljiv);

	printf("\nU nizu ima %d parnih brojeva,a %d djeljivih sa 3, ali ne i sa 5.", brojacParnih, brojacDjeljivih);

	while (brojacParnih < brojacDjeljivih)
	{
		printf("\n\nU nizu imate manje parnih brojeva nego brojeva djeljivih sa 3, ali ne i sa 5!\n");
		printf("Vas niz je: ");
		for (i = 0; i < brojElemenata; i++)
		{
			printf("%d ", niz[i]);
		}
		printf("\n\nOdaberite lokaciju broja kojeg zelite zamijeniti: ");
		scanf("%d", &lokacija);
		while (lokacija > brojElemenata)
		{
			printf("Kriv unos, molim Vas unesite lokaciju opet: ");
			scanf("%d", &lokacija);
		}
		printf("Unesite broj koji zelite umjesto trenutnog: ");
		scanf("%d", &niz[lokacija - 1]);
		brojacParnih = analiza(niz, brojElemenata, jestParan);
		brojacDjeljivih = analiza(niz, brojElemenata, jestDjeljiv);
	}

	printf("\n\nSada niz ima vise elemenata koji su parni, ali nisu djeljivi sa 5!!");
	printf("\nVas niz je: ");
	for (i = 0; i < brojElemenata; i++)
	{
		printf("%d ", niz[i]);
	}
	printf("\n");

	
	
	system("pause");
	return 0;
}

int analiza(int* prviElement, int brojElemenata, int(* pozivFje)(int))
{
	int i, brojac = 0;

	for (i = 0; i < brojElemenata; i++)
	{
		if (pozivFje(prviElement[i]))
		{
			brojac++;
		}
	}
	return brojac;

}

int jestParan(int broj)
{
	return (broj % 2) ? 0 : 1;
}

int jestDjeljiv(int broj)
{
	return ((!(broj % 3) && (broj % 5)) ? 1 : 0);
}




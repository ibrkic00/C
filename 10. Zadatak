#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<math.h>
#include<stdlib.h>
#include<malloc.h>
#include<string.h>

void ispis(int* prviElementMatrice, int brojRedova, int brojStupaca)
{
	int i, j;
	for (i = 0; i < brojRedova; i++)
	{
		for (j = 0; j < brojStupaca; j++)
		{
			printf("%d  ", *(prviElementMatrice + i * brojRedova + j));
		}
		printf("\n");
	}
}

int prepisi(int* prviElementMatrice, int brojElemenata, int **prviElementNiza)
{
	int i, brojElemenataNiza=0, k=0;
	for (i = 0; i < brojElemenata; i++)
	{
		if ((*(prviElementMatrice + i) % 2 == 0) && (*(prviElementMatrice + i) >= 10))
		{
			brojElemenataNiza++;
		}
	}

	*prviElementNiza = (int*)malloc(brojElemenataNiza * sizeof(int));
	if (prviElementNiza == NULL)
	{
		printf("Greska u alokaciji memorije.");
		exit(-1);
	}

	for (i = 0; i < brojElemenata; i++)
	{
		if ((*(prviElementMatrice + i) % 2 == 0) && (*(prviElementMatrice + i) >= 10))
		{
			*(*(prviElementNiza)+k)=*(prviElementMatrice+i);
			k++;
		}
	}
	return brojElemenataNiza;
}


int main()
{
	FILE* pokazivacNaDatoteku;
	int* matrica;
	int i, j, test=1, velicinaNiza, brojRedova, brojStupaca;
	int* pokazivacNaNiz;
	
	pokazivacNaDatoteku = fopen("nizVjezba1.txt", "w");
	

	while (test)
	{
		printf("Unesite broj redova: ");
		scanf("%d", &brojRedova);
		printf("Unesite broj stupaca: ");
		scanf("%d", &brojStupaca);
		if (brojRedova == brojStupaca)
		{
			test = 0;
		}
		else
		{
			printf("Molimo unesite kvadratnu matricu!!\n");
		}
	}

	matrica = (int*)malloc(brojRedova * brojStupaca * sizeof(int));
	if (matrica == NULL)
	{
		printf("Greska u alokaciji memorije.");
		exit(-1);
	}

	for (i = 0; i < brojRedova; i++)
	{
		for (j = 0; j < brojStupaca; j++)
		{
			printf("Molim unesite element na poziciji %d. red, %d. stupac: ", (i + 1), (j + 1));
			scanf("%d", (matrica + i * brojRedova + j));
		}
	}

	ispis(matrica, brojRedova, brojStupaca);

	velicinaNiza = prepisi(matrica, (brojRedova*brojStupaca), &pokazivacNaNiz);
	if (velicinaNiza == -1)
	{
		exit(-1);
	}

	printf("\n");

	for (i = 0; i < velicinaNiza; i++)
	{
		printf("%d ", *(pokazivacNaNiz + i));
	}

	printf("\n");
	
	for (i = 0; i < velicinaNiza; i++)
	{
		fprintf(pokazivacNaDatoteku, "%d ", *(pokazivacNaNiz + i));
	}

	fclose(pokazivacNaDatoteku);

	system("pause");
	return 0;
}
